(()=>{"use strict";class e{entries;rows;cols;constructor(t,n,o){if(t instanceof e)this.entries=t.entries.map((e=>e.slice())),this.rows=void 0!==n?n:t.entries.length,this.cols=void 0!==o?o:t.entries[0].length;else if("string"==typeof t){if(void 0===n)throw new TypeError("Rows not specified.");if(null==o)throw new TypeError("Cols not specified.");this.rows=n,this.cols=o,this.entries=this.toBooleans(t,n,o)}else if("number"==typeof t){if(void 0===n)throw new TypeError("Cols not specified.");this.entries=Array.from({length:t},(()=>new Array(n).fill(!1))),this.rows=t,this.cols=n}else this.entries=t.map((e=>e.slice())),this.rows=void 0!==n?n:t.length,this.cols=void 0!==o?o:t[0].length}toBooleans(e,t,n){const o=Array.from({length:t},(()=>new Array(n)));let i=0,s=0;for(const t of e)/\s/.test(t)||(o[i][s]="0"!==t,++s===n&&(s=0,++i));return o}fill(e){for(let t=this.rows-1;t>=0;--t)this.entries[t].fill(e)}swapRows(e,t){const n=this.entries[e];return this.entries[e]=this.entries[t],this.entries[t]=n,this}xorRow(e,t){const n=this.entries[e],o=this.entries[t];for(let e=this.cols-1;e>=0;--e)o[e]=o[e]!==n[e];return this}reduce(){for(let e=0;e<this.rows;++e){e:{for(let t=e;t<this.rows;++t)if(this.entries[t][e]){this.swapRows(t,e);break e}continue}for(let t=0;t<this.rows;++t)t!=e&&this.entries[t][e]&&this.xorRow(e,t)}return this}toString(){let e="";for(let t=0;t<this.rows;++t){for(let n=0;n<this.cols;++n)e+=this.entries[t][n]?"1":"0";e+="\n"}return e}}class t extends e{static DEFAULT_MATRIX=[[!1,!0,!1],[!0,!0,!0],[!1,!0,!1]];wrap;centerRow;centerCol;constructor(e=!1,n=t.DEFAULT_MATRIX,o,i){super(n,o,i),this.wrap=e,this.centerRow=Math.floor(this.rows/2),this.centerCol=Math.floor(this.cols/2)}}class n extends e{kernel;constructor(e,t,n,o){super(t,n,o),this.kernel=e}pushButton(e,t){const n=e-this.kernel.centerRow,o=t-this.kernel.centerCol;for(let e=this.kernel.rows-1;e>=0;--e){let t=n+e;if(t<0){if(!this.kernel.wrap)continue;t+=this.rows}else if(t>=this.rows){if(!this.kernel.wrap)continue;t-=this.rows}for(let n=this.kernel.cols-1;n>=0;--n){let i=o+n;if(i<0){if(!this.kernel.wrap)continue;i+=this.cols}else if(i>=this.cols){if(!this.kernel.wrap)continue;i-=this.cols}this.entries[t][i]=this.entries[t][i]!==this.kernel.entries[e][n]}}}verifySolution(e){const t=new n(this.kernel,this);for(let n=this.rows-1;n>=0;--n)for(let o=this.cols-1;o>=0;--o)e[n][o]&&t.pushButton(n,o);for(let e=this.rows-1;e>=0;--e)for(let n=this.cols-1;n>=0;--n)if(t.entries[e][n])return!1;return!0}createAugmentedMatrix(){const t=this.rows*this.cols,o=new e(t,t+1),i=new n(this.kernel,this.rows,this.cols);for(let e=0,n=0;e<this.rows;++e)for(let s=0;s<this.cols;++s,++n){o.entries[n][t]=this.entries[e][s],i.pushButton(e,s);for(let e=0,t=0;e<this.rows;++e)for(let s=0;s<this.cols;++s,++t)o.entries[t][n]=i.entries[e][s];i.pushButton(e,s)}return o}solve(){const e=this.createAugmentedMatrix().reduce(),t=Array.from({length:this.rows},(()=>new Array(this.cols).fill(!1)));for(let n=0,o=0,i=0;n<e.rows;++n)t[o][i]=e.entries[n][n]&&e.entries[n][e.rows],++i==this.cols&&(i=0,++o);return this.verifySolution(t)?t:null}mix(){for(let e=this.rows-1;e>=0;--e)this.entries[e].fill(!1);for(let e=this.rows-1;e>=0;--e)for(let t=this.cols-1;t>=0;--t)Math.random()<.5&&this.pushButton(e,t);return this}}const o=50,i=3,s=5,r=10,l=500;var c;!function(e){e[e.PLAYING=0]="PLAYING",e[e.EDITING=1]="EDITING",e[e.CONFIGURING=2]="CONFIGURING"}(c||(c={}));const u={puzzle:"puzzle-panel",puzzleOps:"puzzle-ops-panel",puzzleEdit:"puzzle-edit-panel",config:"config-panel"},d=new Array(2),a=new Array(2),h=new Array(2);let m=new t,f=new n(m,s,s).mix(),w=null,g=null,v=!1,p=c.PLAYING;function E(){v=!1,document.getElementById("solveButton").style.transform=""}function y(e){let t=parseInt(e.value);return t=isNaN(t)?s:Math.min(r,Math.max(i,t)),t}function B(e){document.getElementById("minusButton").disabled=e<=i,document.getElementById("plusButton").disabled=e>=r}function I(){const e=document.getElementById("sizeField"),t=y(e);B(t),e.value=t.toString()}function k(e){w=e,R()}function L(){w=null,R()}function z(){g=null,document.getElementById("main-container").innerHTML=u.puzzle,A(),function(){const e=document.getElementById("puzzle-canvas");e.height=o*f.rows,e.width=o*f.cols,e.addEventListener("click",(t=>{return n=x(e,t),p==c.PLAYING?f.pushButton(n.row,n.col):f.entries[n.row][n.col]=!f.entries[n.row][n.col],null!==g&&(g[n.row][n.col]=!g[n.row][n.col],M()),void N();var n})),e.addEventListener("blur",(e=>C())),e.addEventListener("mouseenter",(t=>b(x(e,t)))),e.addEventListener("mousemove",(t=>b(x(e,t)))),e.addEventListener("mouseleave",(e=>C()))}(),N()}function A(){p=c.PLAYING,w=null,document.getElementById("puzzle-ops").innerHTML=u.puzzleOps,document.getElementById("mixButton").addEventListener("click",(e=>(g=null,E(),f.mix(),void N()))),document.getElementById("solveButton").addEventListener("click",(e=>(g=f.solve(),null===g?function(){if(v)return;const e=document.getElementById("solveButton");v=!0;let t=-1;const n=o=>{if(!v)return;t<0&&(t=o);const i=o-t;i>l?E():(e.style.transform=`translateX(${5*Math.sin(15*Math.PI*i/l)}px)`,requestAnimationFrame(n))};requestAnimationFrame(n)}():M(),void N()))),document.getElementById("editButton").addEventListener("click",(e=>(E(),p=c.EDITING,w=null,g=null,document.getElementById("puzzle-ops").innerHTML=u.puzzleEdit,document.getElementById("fillButton").addEventListener("click",(e=>(f.fill(!0),void N()))),document.getElementById("clearButton").addEventListener("click",(e=>(f.fill(!1),void N()))),document.getElementById("doneButton").addEventListener("click",(e=>{A()})),g=null,void N()))),document.getElementById("configButton").addEventListener("click",(e=>(E(),g=null,void function(){p=c.CONFIGURING,w=null,g=null,document.getElementById("main-container").innerHTML=u.config,document.getElementById("minusButton").addEventListener("click",(e=>function(){const e=document.getElementById("sizeField"),t=Math.max(i,y(e)-1);B(t),e.value=t.toString()}())),document.getElementById("plusButton").addEventListener("click",(e=>function(){const e=document.getElementById("sizeField"),t=Math.min(r,y(e)+1);B(t),e.value=t.toString()}())),document.getElementById("resetButton").addEventListener("click",(e=>(document.getElementById("sizeField").value=s.toString(),B(s),m=new t,document.getElementById("wrapCheckbox").checked=m.wrap,void R()))),document.getElementById("doneButton").addEventListener("click",(e=>function(){const e=y(document.getElementById("sizeField"));m=new t(document.getElementById("wrapCheckbox").checked,m),f=new n(m,e,e).mix(),z()}())),document.getElementById("wrapCheckbox").checked=m.wrap;const e=document.getElementById("sizeField");e.value=f.rows.toString(),e.addEventListener("blur",(e=>I())),I();const l=document.getElementById("kernel-canvas");l.height=o*m.rows,l.width=o*m.cols,l.addEventListener("click",(e=>{return t=x(l,e),m.entries[t.row][t.col]=!m.entries[t.row][t.col],void R();var t})),l.addEventListener("blur",(e=>L())),l.addEventListener("mouseenter",(e=>k(x(l,e)))),l.addEventListener("mousemove",(e=>k(x(l,e)))),l.addEventListener("mouseleave",(e=>L())),R()}())))}function x(e,t){const n=e.getBoundingClientRect();return{row:Math.floor((t.clientY-n.top)*e.height/(o*n.height)),col:Math.floor((t.clientX-n.left)*e.width/(o*n.width))}}function M(){if(null!==g)e:{for(let e=f.rows-1;e>=0;--e)for(let t=f.cols-1;t>=0;--t)if(g[e][t])break e;g=null}}function b(e){w=e,N()}function C(){w=null,N()}function N(){T("puzzle-canvas",f)}function R(){T("kernel-canvas",m)}function T(e,t){const n=!("ontouchstart"in window||navigator.maxTouchPoints),i=document.getElementById(e),s=i.getContext("2d");s.fillStyle=window.getComputedStyle(document.body).backgroundColor,s.fillRect(0,0,i.width,i.height);for(let e=t.rows-1;e>=0;--e)for(let i=t.cols-1;i>=0;--i){const r=n&&w&&e==w.row&&i==w.col?1:0;s.drawImage(t.entries[e][i]?a[r]:d[r],1+o*i,1+o*e),null!==g&&g[e][i]&&s.drawImage(h[r],13+o*i,13+o*e)}}async function F(e){return new Promise(((t,n)=>{const o=new Image;o.onload=()=>t(o),o.onerror=e=>n(new Error("Failed to load image.")),o.src=e}))}document.addEventListener("DOMContentLoaded",(async function(){await async function(){await Promise.all(Object.keys(u).map((async e=>{const t=await fetch(`${u[e]}.html`);t.ok&&(u[e]=await t.text())})))}(),a[0]=await F("button-pink.svg"),a[1]=await F("button-dark-pink.svg"),d[0]=await F("button-purple.svg"),d[1]=await F("button-dark-purple.svg"),h[0]=await F("plus.svg"),h[1]=await F("dark-plus.svg"),z()}))})();